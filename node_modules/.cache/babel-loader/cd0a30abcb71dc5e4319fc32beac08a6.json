{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luigi\\\\Projects\\\\test1\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport \"tachyons\";\nimport Clarifai from \"clarifai\";\nimport Particles from \"react-particles-js\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport ActorImage from \"./Components/ActorImage/ActorImage\";\nimport ParticlesConfig from \"./Components/Particles/ParticlesConfig\";\nimport DetectedActor from \"./Components/DetectedActor/DetectedActor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: \"812fd1e20128438291b068e79b6ab402\"\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.detectedImageHandler = data => {\n      const detectedImage = data.outputs[0].data.regions[0].data.concepts[0].name;\n      const arrImage = detectedImage.split(' ');\n      const Name = [];\n      arrImage.forEach(word => {\n        if (word.includes('.')) {\n          Name.push(word.toUpperCase());\n        } else if (word[0] === word[0].toLowerCase()) {\n          Name.push(word[0].toUpperCase() + word.substr(1).toLowerCase());\n        }\n      });\n      return Name.join(' ');\n    };\n\n    this.displayName = actorName => {\n      this.setState({\n        nameDetected: actorName\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onClickHandler = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      app.models.predict(Clarifai.CELEBRITY_MODEL, this.state.input).then(response => this.displayName(this.detectedImageHandler(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: \"\",\n      imgUrl: \"\",\n      nameDetected: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        params: ParticlesConfig,\n        className: \"particles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onClickHandler: this.onClickHandler,\n        onInputChange: this.onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActorImage, {\n        imgUrl: this.state.imgUrl,\n        nameDetected: this.state.nameDetected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DetectedActor, {\n        className: \"center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/luigi/Projects/test1/src/App.js"],"names":["Component","Clarifai","Particles","Logo","ImageLinkForm","ActorImage","ParticlesConfig","DetectedActor","app","App","apiKey","constructor","detectedImageHandler","data","detectedImage","outputs","regions","concepts","name","arrImage","split","Name","forEach","word","includes","push","toUpperCase","toLowerCase","substr","join","displayName","actorName","setState","nameDetected","onInputChange","event","input","target","value","onClickHandler","imgUrl","state","models","predict","CELEBRITY_MODEL","then","response","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { Component } from \"react\";\nimport \"tachyons\";\nimport Clarifai from \"clarifai\";\nimport Particles from \"react-particles-js\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport ActorImage from \"./Components/ActorImage/ActorImage\";\nimport ParticlesConfig from \"./Components/Particles/ParticlesConfig\";\nimport DetectedActor from \"./Components/DetectedActor/DetectedActor\";\n\nconst app = new Clarifai.App({\n  apiKey: \"812fd1e20128438291b068e79b6ab402\",\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imgUrl: \"\",\n      nameDetected: '',\n    };\n  }\n\n  detectedImageHandler = (data) => {   \n    const detectedImage = data.outputs[0].data.regions[0].data.concepts[0].name;\n    const arrImage = detectedImage.split(' ');\n    const Name = [];\n    arrImage.forEach(word =>{\n      if(word.includes('.')){\n        Name.push(word.toUpperCase())\n      } else if (word[0] === word[0].toLowerCase()){\n        Name.push(word[0].toUpperCase() + word.substr(1).toLowerCase());\n      }\n    })\n\n    return Name.join(' '); \n  };\n\n  displayName = (actorName) => {\n    this.setState({ nameDetected: actorName });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onClickHandler = () => {\n    this.setState({ imgUrl: this.state.input });\n    app.models\n    .predict(Clarifai.CELEBRITY_MODEL, this.state.input)\n    .then(response => this.displayName(this.detectedImageHandler(response)))\n    .catch(err => console.log(err));\n  };\n\n\n\n  render() {\n    return (\n      <div>\n        <Particles params={ParticlesConfig} className=\"particles\" />\n        <Logo />\n        <ImageLinkForm\n          onClickHandler={this.onClickHandler}\n          onInputChange={this.onInputChange}\n        />\n        <ActorImage imgUrl={this.state.imgUrl} nameDetected={this.state.nameDetected} />\n        <DetectedActor className=\"center\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}