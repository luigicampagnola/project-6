{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luigi\\\\Projects\\\\test1\\\\src\\\\App.js\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport \"tachyons\";\nimport Clarifai from \"clarifai\";\nimport Particles from \"react-particles-js\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport ActorImage from \"./Components/ActorImage/ActorImage\";\nimport particlesConfig from \"./Components/Particles/ParticlesConfig\";\nimport DetectedActor from \"./Components/DetectedActor/DetectedActor\";\nimport SignIn from \"./Components/SignIn/SignIn\";\nimport Header from \"./Components/Header/Hearder\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Instructions from \"./Components/Instructions/Intructions\";\nimport Register from \"./Components/Register/Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: \"812fd1e20128438291b068e79b6ab402\"\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.detectedImageHandler = data => {\n      const detectedImage = data.outputs[0].data.regions[0].data.concepts[0].name;\n      const arrImage = detectedImage.split(\" \");\n      const Name = [];\n      arrImage.forEach(word => {\n        if (word.includes(\".\")) {\n          Name.push(word.toUpperCase());\n        } else if (word[0] === word[0].toLowerCase()) {\n          Name.push(word[0].toUpperCase() + word.substr(1).toLowerCase());\n        }\n      });\n      return Name.join(\" \");\n    };\n\n    this.displayName = actorName => {\n      this.setState({\n        nameDetected: actorName\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onClickHandler = () => {\n      this.setState({\n        imgUrl: this.state.input\n      });\n      app.models.predict(Clarifai.CELEBRITY_MODEL, this.state.input).then(response => this.displayName(this.detectedImageHandler(response))).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: \"\",\n      imgUrl: \"\",\n      nameDetected: \"\",\n      route: \"signin\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        params: particlesConfig,\n        className: \"particles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), this.state.route === \"home\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onClickHandler: this.onClickHandler,\n          onInputChange: this.onInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ActorImage, {\n          imgUrl: this.state.imgUrl,\n          nameDetected: this.state.nameDetected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DetectedActor, {\n          className: \"center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : this.state.route = \"signin\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SignIn, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Register, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/luigi/Projects/test1/src/App.js"],"names":["Component","Clarifai","Particles","Logo","ImageLinkForm","ActorImage","particlesConfig","DetectedActor","SignIn","Header","Navigation","Instructions","Register","app","App","apiKey","constructor","detectedImageHandler","data","detectedImage","outputs","regions","concepts","name","arrImage","split","Name","forEach","word","includes","push","toUpperCase","toLowerCase","substr","join","displayName","actorName","setState","nameDetected","onInputChange","event","input","target","value","onClickHandler","imgUrl","state","models","predict","CELEBRITY_MODEL","then","response","catch","err","console","log","onRouteChange","route","render"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,UAAP;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;AAEA,MAAMC,GAAG,GAAG,IAAIZ,QAAQ,CAACa,GAAb,CAAiB;AAC3BC,EAAAA,MAAM,EAAE;AADmB,CAAjB,CAAZ;;AAIA,MAAMD,GAAN,SAAkBd,SAAlB,CAA4B;AAC1BgB,EAAAA,WAAW,GAAG;AACZ;;AADY,SAUdC,oBAVc,GAUUC,IAAD,IAAU;AAC/B,YAAMC,aAAa,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBF,IAAhB,CAAqBG,OAArB,CAA6B,CAA7B,EAAgCH,IAAhC,CAAqCI,QAArC,CAA8C,CAA9C,EAAiDC,IAAvE;AACA,YAAMC,QAAQ,GAAGL,aAAa,CAACM,KAAd,CAAoB,GAApB,CAAjB;AACA,YAAMC,IAAI,GAAG,EAAb;AACAF,MAAAA,QAAQ,CAACG,OAAT,CAAkBC,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACC,QAAL,CAAc,GAAd,CAAJ,EAAwB;AACtBH,UAAAA,IAAI,CAACI,IAAL,CAAUF,IAAI,CAACG,WAAL,EAAV;AACD,SAFD,MAEO,IAAIH,IAAI,CAAC,CAAD,CAAJ,KAAYA,IAAI,CAAC,CAAD,CAAJ,CAAQI,WAAR,EAAhB,EAAuC;AAC5CN,UAAAA,IAAI,CAACI,IAAL,CAAUF,IAAI,CAAC,CAAD,CAAJ,CAAQG,WAAR,KAAwBH,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAeD,WAAf,EAAlC;AACD;AACF,OAND;AAQA,aAAON,IAAI,CAACQ,IAAL,CAAU,GAAV,CAAP;AACD,KAvBa;;AAAA,SAyBdC,WAzBc,GAyBCC,SAAD,IAAe;AAC3B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEF;AAAhB,OAAd;AACD,KA3Ba;;AAAA,SA6BdG,aA7Bc,GA6BGC,KAAD,IAAW;AACzB,WAAKH,QAAL,CAAc;AAAEI,QAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACD,KA/Ba;;AAAA,SAiCdC,cAjCc,GAiCG,MAAM;AACrB,WAAKP,QAAL,CAAc;AAAEQ,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWL;AAArB,OAAd;AACA5B,MAAAA,GAAG,CAACkC,MAAJ,CACGC,OADH,CACW/C,QAAQ,CAACgD,eADpB,EACqC,KAAKH,KAAL,CAAWL,KADhD,EAEGS,IAFH,CAESC,QAAD,IAAc,KAAKhB,WAAL,CAAiB,KAAKlB,oBAAL,CAA0BkC,QAA1B,CAAjB,CAFtB,EAGGC,KAHH,CAGUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAHlB;AAID,KAvCa;;AAAA,SAyCdG,aAzCc,GAyCGC,KAAD,IAAW;AACzB,WAAKpB,QAAL,CAAc;AAAEoB,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,KA3Ca;;AAEZ,SAAKX,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAE,EADI;AAEXI,MAAAA,MAAM,EAAE,EAFG;AAGXP,MAAAA,YAAY,EAAE,EAHH;AAIXmB,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD;;AAqCDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,MAAM,EAAEpD,eAAnB;AAAoC,QAAA,SAAS,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,aAAa,EAAE,KAAKkD;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAHF,EAIG,KAAKV,KAAL,CAAWW,KAAX,KAAqB,MAArB,gBACC;AAAA,gCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AACE,UAAA,cAAc,EAAE,KAAKb,cADvB;AAEE,UAAA,aAAa,EAAE,KAAKL;AAFtB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME,QAAC,UAAD;AACE,UAAA,MAAM,EAAE,KAAKO,KAAL,CAAWD,MADrB;AAEE,UAAA,YAAY,EAAE,KAAKC,KAAL,CAAWR;AAF3B;AAAA;AAAA;AAAA;AAAA,gBANF,eAUE,QAAC,aAAD;AAAe,UAAA,SAAS,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAcC,KAAKQ,KAAL,CAAWW,KAAX,GAAmB,wBACjB;AAAA,gCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,aAAa,EAAE,KAAKD;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADiB,gBAMjB;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,aAAa,EAAE,KAAKA;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxBN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AA/EyB;;AAkF5B,eAAe1C,GAAf","sourcesContent":["import \"./App.css\";\nimport { Component } from \"react\";\nimport \"tachyons\";\nimport Clarifai from \"clarifai\";\nimport Particles from \"react-particles-js\";\nimport Logo from \"./Components/Logo/Logo\";\nimport ImageLinkForm from \"./Components/ImageLinkForm/ImageLinkForm\";\nimport ActorImage from \"./Components/ActorImage/ActorImage\";\nimport particlesConfig from \"./Components/Particles/ParticlesConfig\";\nimport DetectedActor from \"./Components/DetectedActor/DetectedActor\";\nimport SignIn from \"./Components/SignIn/SignIn\";\nimport Header from \"./Components/Header/Hearder\";\nimport Navigation from \"./Components/Navigation/Navigation\";\nimport Instructions from \"./Components/Instructions/Intructions\";\nimport Register from \"./Components/Register/Register\";\n\nconst app = new Clarifai.App({\n  apiKey: \"812fd1e20128438291b068e79b6ab402\",\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imgUrl: \"\",\n      nameDetected: \"\",\n      route: \"signin\",\n    };\n  }\n\n  detectedImageHandler = (data) => {\n    const detectedImage = data.outputs[0].data.regions[0].data.concepts[0].name;\n    const arrImage = detectedImage.split(\" \");\n    const Name = [];\n    arrImage.forEach((word) => {\n      if (word.includes(\".\")) {\n        Name.push(word.toUpperCase());\n      } else if (word[0] === word[0].toLowerCase()) {\n        Name.push(word[0].toUpperCase() + word.substr(1).toLowerCase());\n      }\n    });\n\n    return Name.join(\" \");\n  };\n\n  displayName = (actorName) => {\n    this.setState({ nameDetected: actorName });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onClickHandler = () => {\n    this.setState({ imgUrl: this.state.input });\n    app.models\n      .predict(Clarifai.CELEBRITY_MODEL, this.state.input)\n      .then((response) => this.displayName(this.detectedImageHandler(response)))\n      .catch((err) => console.log(err));\n  };\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  };\n\n  render() {\n    return (\n      <div>\n        <Particles params={particlesConfig} className=\"particles\" />\n        <Navigation onRouteChange={this.onRouteChange} />\n        <Logo />\n        {this.state.route === \"home\" ? (\n          <div>\n            <Instructions />\n            <ImageLinkForm\n              onClickHandler={this.onClickHandler}\n              onInputChange={this.onInputChange}\n            />\n            <ActorImage\n              imgUrl={this.state.imgUrl}\n              nameDetected={this.state.nameDetected}\n            />\n            <DetectedActor className=\"center\" />\n          </div>\n        ) : \n          this.state.route = \"signin\" ? (\n            <div>\n              <Header />\n              <SignIn onRouteChange={this.onRouteChange} />\n            </div>\n          ) : (\n            <div>\n              <Register onRouteChange={this.onRouteChange} />\n            </div>\n          \n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}