{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/Users/luigi/Projects/test1/recognizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/Users/luigi/Projects/test1/recognizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NumberUtils = void 0;\n\nvar Directions_1 = require(\"../Enums/Directions\");\n\nvar NumberUtils = /*#__PURE__*/function () {\n  function NumberUtils() {\n    _classCallCheck(this, NumberUtils);\n  }\n\n  _createClass(NumberUtils, null, [{\n    key: \"clamp\",\n    value: function clamp(num, min, max) {\n      return Math.min(Math.max(num, min), max);\n    }\n  }, {\n    key: \"mix\",\n    value: function mix(comp1, comp2, weight1, weight2) {\n      return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n    }\n  }, {\n    key: \"randomInRange\",\n    value: function randomInRange(r) {\n      var max = NumberUtils.getRangeMax(r);\n      var min = NumberUtils.getRangeMin(r);\n\n      if (max === min) {\n        min = 0;\n      }\n\n      return Math.random() * (max - min) + min;\n    }\n  }, {\n    key: \"getRangeValue\",\n    value: function getRangeValue(value) {\n      return typeof value === \"number\" ? value : NumberUtils.randomInRange(value);\n    }\n  }, {\n    key: \"getRangeMin\",\n    value: function getRangeMin(value) {\n      return typeof value === \"number\" ? value : value.min;\n    }\n  }, {\n    key: \"getRangeMax\",\n    value: function getRangeMax(value) {\n      return typeof value === \"number\" ? value : value.max;\n    }\n  }, {\n    key: \"setRangeValue\",\n    value: function setRangeValue(source, value) {\n      if (source === value || value === undefined && typeof source === \"number\") {\n        return source;\n      }\n\n      var min = NumberUtils.getRangeMin(source),\n          max = NumberUtils.getRangeMax(source);\n      return value !== undefined ? {\n        min: Math.min(min, value),\n        max: Math.max(max, value)\n      } : NumberUtils.setRangeValue(min, max);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(options) {\n      var random = options.random;\n\n      var _ref = typeof random === \"boolean\" ? {\n        enable: random,\n        minimumValue: 0\n      } : random,\n          enable = _ref.enable,\n          minimumValue = _ref.minimumValue;\n\n      return enable ? NumberUtils.randomInRange({\n        min: minimumValue,\n        max: options.value\n      }) : options.value;\n    }\n  }, {\n    key: \"getDistances\",\n    value: function getDistances(pointA, pointB) {\n      var dx = pointA.x - pointB.x;\n      var dy = pointA.y - pointB.y;\n      return {\n        dx: dx,\n        dy: dy,\n        distance: Math.sqrt(dx * dx + dy * dy)\n      };\n    }\n  }, {\n    key: \"getDistance\",\n    value: function getDistance(pointA, pointB) {\n      return NumberUtils.getDistances(pointA, pointB).distance;\n    }\n  }, {\n    key: \"getParticleBaseVelocity\",\n    value: function getParticleBaseVelocity(particle) {\n      var velocityBase;\n\n      switch (particle.direction) {\n        case Directions_1.MoveDirection.top:\n          velocityBase = {\n            x: 0,\n            y: -1\n          };\n          break;\n\n        case Directions_1.MoveDirection.topRight:\n          velocityBase = {\n            x: 0.5,\n            y: -0.5\n          };\n          break;\n\n        case Directions_1.MoveDirection.right:\n          velocityBase = {\n            x: 1,\n            y: -0\n          };\n          break;\n\n        case Directions_1.MoveDirection.bottomRight:\n          velocityBase = {\n            x: 0.5,\n            y: 0.5\n          };\n          break;\n\n        case Directions_1.MoveDirection.bottom:\n          velocityBase = {\n            x: 0,\n            y: 1\n          };\n          break;\n\n        case Directions_1.MoveDirection.bottomLeft:\n          velocityBase = {\n            x: -0.5,\n            y: 1\n          };\n          break;\n\n        case Directions_1.MoveDirection.left:\n          velocityBase = {\n            x: -1,\n            y: 0\n          };\n          break;\n\n        case Directions_1.MoveDirection.topLeft:\n          velocityBase = {\n            x: -0.5,\n            y: -0.5\n          };\n          break;\n\n        default:\n          velocityBase = {\n            x: 0,\n            y: 0\n          };\n          break;\n      }\n\n      return velocityBase;\n    }\n  }, {\n    key: \"rotateVelocity\",\n    value: function rotateVelocity(velocity, angle) {\n      return {\n        horizontal: velocity.horizontal * Math.cos(angle) - velocity.vertical * Math.sin(angle),\n        vertical: velocity.horizontal * Math.sin(angle) + velocity.vertical * Math.cos(angle)\n      };\n    }\n  }, {\n    key: \"collisionVelocity\",\n    value: function collisionVelocity(v1, v2, m1, m2) {\n      return {\n        horizontal: v1.horizontal * (m1 - m2) / (m1 + m2) + v2.horizontal * 2 * m2 / (m1 + m2),\n        vertical: v1.vertical\n      };\n    }\n  }]);\n\n  return NumberUtils;\n}();\n\nexports.NumberUtils = NumberUtils;","map":{"version":3,"sources":["C:/Users/luigi/Projects/test1/recognizer/node_modules/tsparticles/dist/Utils/NumberUtils.js"],"names":["Object","defineProperty","exports","value","NumberUtils","Directions_1","require","num","min","max","Math","comp1","comp2","weight1","weight2","floor","r","getRangeMax","getRangeMin","random","randomInRange","source","undefined","setRangeValue","options","enable","minimumValue","pointA","pointB","dx","x","dy","y","distance","sqrt","getDistances","particle","velocityBase","direction","MoveDirection","top","topRight","right","bottomRight","bottom","bottomLeft","left","topLeft","velocity","angle","horizontal","cos","vertical","sin","v1","v2","m1","m2"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberUtils = void 0;\nconst Directions_1 = require(\"../Enums/Directions\");\nclass NumberUtils {\n    static clamp(num, min, max) {\n        return Math.min(Math.max(num, min), max);\n    }\n    static mix(comp1, comp2, weight1, weight2) {\n        return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n    }\n    static randomInRange(r) {\n        const max = NumberUtils.getRangeMax(r);\n        let min = NumberUtils.getRangeMin(r);\n        if (max === min) {\n            min = 0;\n        }\n        return Math.random() * (max - min) + min;\n    }\n    static getRangeValue(value) {\n        return typeof value === \"number\" ? value : NumberUtils.randomInRange(value);\n    }\n    static getRangeMin(value) {\n        return typeof value === \"number\" ? value : value.min;\n    }\n    static getRangeMax(value) {\n        return typeof value === \"number\" ? value : value.max;\n    }\n    static setRangeValue(source, value) {\n        if (source === value || (value === undefined && typeof source === \"number\")) {\n            return source;\n        }\n        const min = NumberUtils.getRangeMin(source), max = NumberUtils.getRangeMax(source);\n        return value !== undefined\n            ? {\n                min: Math.min(min, value),\n                max: Math.max(max, value),\n            }\n            : NumberUtils.setRangeValue(min, max);\n    }\n    static getValue(options) {\n        const random = options.random;\n        const { enable, minimumValue } = typeof random === \"boolean\" ? { enable: random, minimumValue: 0 } : random;\n        return enable ? NumberUtils.randomInRange({ min: minimumValue, max: options.value }) : options.value;\n    }\n    static getDistances(pointA, pointB) {\n        const dx = pointA.x - pointB.x;\n        const dy = pointA.y - pointB.y;\n        return { dx: dx, dy: dy, distance: Math.sqrt(dx * dx + dy * dy) };\n    }\n    static getDistance(pointA, pointB) {\n        return NumberUtils.getDistances(pointA, pointB).distance;\n    }\n    static getParticleBaseVelocity(particle) {\n        let velocityBase;\n        switch (particle.direction) {\n            case Directions_1.MoveDirection.top:\n                velocityBase = { x: 0, y: -1 };\n                break;\n            case Directions_1.MoveDirection.topRight:\n                velocityBase = { x: 0.5, y: -0.5 };\n                break;\n            case Directions_1.MoveDirection.right:\n                velocityBase = { x: 1, y: -0 };\n                break;\n            case Directions_1.MoveDirection.bottomRight:\n                velocityBase = { x: 0.5, y: 0.5 };\n                break;\n            case Directions_1.MoveDirection.bottom:\n                velocityBase = { x: 0, y: 1 };\n                break;\n            case Directions_1.MoveDirection.bottomLeft:\n                velocityBase = { x: -0.5, y: 1 };\n                break;\n            case Directions_1.MoveDirection.left:\n                velocityBase = { x: -1, y: 0 };\n                break;\n            case Directions_1.MoveDirection.topLeft:\n                velocityBase = { x: -0.5, y: -0.5 };\n                break;\n            default:\n                velocityBase = { x: 0, y: 0 };\n                break;\n        }\n        return velocityBase;\n    }\n    static rotateVelocity(velocity, angle) {\n        return {\n            horizontal: velocity.horizontal * Math.cos(angle) - velocity.vertical * Math.sin(angle),\n            vertical: velocity.horizontal * Math.sin(angle) + velocity.vertical * Math.cos(angle),\n        };\n    }\n    static collisionVelocity(v1, v2, m1, m2) {\n        return {\n            horizontal: (v1.horizontal * (m1 - m2)) / (m1 + m2) + (v2.horizontal * 2 * m2) / (m1 + m2),\n            vertical: v1.vertical,\n        };\n    }\n}\nexports.NumberUtils = NumberUtils;\n"]},"metadata":{},"sourceType":"script"}